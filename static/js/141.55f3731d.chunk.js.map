{"version":3,"file":"static/js/141.55f3731d.chunk.js","mappings":"sSAAMA,EAAW,+BACXC,EAAM,4CAAZ,SAEeC,EAAS,GAATA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAwBC,GAAxB,uFACsBC,MAAMD,GAD5B,cACUE,EADV,yBAEaA,EAAIC,GAAMD,EAAIE,OAASC,QAAQC,OAAO,IAAIC,MAAM,eAF7D,kEAKO,SAASC,IACb,OAAOT,EAAS,GAAD,OAAIF,EAAJ,8BAAkCC,IAG7C,SAASW,EAAWC,GACxB,OAAOX,EAAS,GAAD,OAAIF,EAAJ,wBAA4BC,EAA5B,yBAAgDY,IAG3D,SAASC,EAAkBC,GAC/B,OAAOb,EAAS,GAAD,OAAIF,EAAJ,kBAAsBe,GAAtB,OAAgCd,IAG3C,SAASe,EAAgBD,GAC7B,OAAOb,EAAS,GAAD,OAAIF,EAAJ,kBAAsBe,EAAtB,mBAAwCd,IAGnD,SAASgB,EAAkBF,GAC/B,OAAOb,EAAS,GAAD,OAAIF,EAAJ,kBAAsBe,EAAtB,mBAAwCd,M,2HCrB3C,SAASiB,IACtB,OAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAON,EAAP,KAAkBO,EAAlB,KACA,GAAoCD,EAAAA,EAAAA,UAAS,IAA7C,eAAOE,EAAP,KAAmBC,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BN,EAAAA,EAAAA,UAAS,MAAnC,eAAOO,EAAP,KAAcC,EAAd,KACA,GAAkCR,EAAAA,EAAAA,UAAS,IAA3C,eAAOS,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACHnB,EAILX,EAAAA,GACcW,GACXoB,MAAK,SAAAC,GAAM,OAAIZ,EAAcY,EAAOC,YACpCC,OAAM,SAAAV,GAAK,OAAIC,EAASD,EAAMW,YAN/BC,QAAQC,IAAI,YAOb,CAAC1B,KAEJmB,EAAAA,EAAAA,YAAU,WAAO,IAAD,IACdH,EAAY,UAACL,EAAagB,IAAI,eAAlB,QAA6B,IACzCpB,EAAY,UAACI,EAAagB,IAAI,eAAlB,QAA6B,MACxC,CAAChB,IAcJ,OACE,4BACE,6BACE,kBAAOiB,KAAK,OAAOC,MAAOd,EAAWe,SAhBjB,SAAAC,GACxBf,EAAae,EAAIC,cAAcH,WAgB3B,mBAAQD,KAAK,SAASK,QAbL,SAAAF,GACrBA,EAAIG,iBACJ,IACMC,EAAsB,KADfpB,EACoB,CAAEqB,KADtBrB,GAC+B,GAC5CR,EAAaQ,GAEbH,EAAgBuB,IAOZ,uBAIDtB,IAAS,wBAAKA,EAAMW,UACpBhB,EAAW6B,KAAI,YAA6B,IAA1BC,EAAyB,EAAzBA,eAAgBC,EAAS,EAATA,GACjC,OACE,0BACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMzB,GAA1C,UACE,uBAAIqB,OAFEC","sources":["api/fetch.js","pages/Movies/Movies.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '?api_key=5c9ace2476c46656758ceca732bea2c0';\n\nasync function fetchApi(url) {\n    const res = await fetch(url);\n      return res.ok ?  res.json() : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrendFilms() {\n   return fetchApi(`${BASE_URL}/trending/movie/day${KEY}`)\n}\n\nexport function fetchMovie(movieName) {\n   return fetchApi(`${BASE_URL}/search/movie${KEY}&page=1&query=${movieName}`)\n}\n\nexport function fetchMovieDetails(movieId) {\n   return fetchApi(`${BASE_URL}/movie/${movieId}${KEY}`)\n}\n\nexport function fetchMovieCasts(movieId) {\n   return fetchApi(`${BASE_URL}/movie/${movieId}/credits${KEY}`)\n}\n\nexport function fetchMovieReviews(movieId) {\n   return fetchApi(`${BASE_URL}/movie/${movieId}/reviews${KEY}`)\n}","import React, { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport * as fetchApi from '../../api/fetch';\n\nexport default function Movies() {\n  const [movieName, setMovieName] = useState('');\n  const [moviesList, setMoviesList] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [error, setError] = useState(null);\n  const [inputName, setInputName] = useState('');\n  const location = useLocation();\n  // const searchName = searchParams.get('name') ?? '';\n  useEffect(() => {\n    if (!movieName) {\n      console.log('Noname');\n      return;\n    }\n    fetchApi\n      .fetchMovie(movieName)\n      .then(movies => setMoviesList(movies.results))\n      .catch(error => setError(error.message));\n  }, [movieName]);\n\n  useEffect(() => {\n    setInputName(searchParams.get('name') ?? '');\n    setMovieName(searchParams.get('name') ?? '');\n  }, [searchParams]);\n  const handleInputChange = evt => {\n    setInputName(evt.currentTarget.value);\n  };\n\n  const handleOnSubmit = evt => {\n    evt.preventDefault();\n    const name = inputName;\n    const nextParams = name !== '' ? { name } : {};\n    setMovieName(inputName);\n\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <div>\n      <form>\n        <input type=\"text\" value={inputName} onChange={handleInputChange} />\n        <button type=\"submit\" onClick={handleOnSubmit}>\n          Search\n        </button>\n      </form>\n      {error && <h2>{error.message}</h2>}\n      {moviesList.map(({ original_title, id }) => {\n        return (\n          <div key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <p>{original_title}</p>\n            </Link>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n"],"names":["BASE_URL","KEY","fetchApi","url","fetch","res","ok","json","Promise","reject","Error","fetchTrendFilms","fetchMovie","movieName","fetchMovieDetails","movieId","fetchMovieCasts","fetchMovieReviews","Movies","useState","setMovieName","moviesList","setMoviesList","useSearchParams","searchParams","setSearchParams","error","setError","inputName","setInputName","location","useLocation","useEffect","then","movies","results","catch","message","console","log","get","type","value","onChange","evt","currentTarget","onClick","preventDefault","nextParams","name","map","original_title","id","to","state","from"],"sourceRoot":""}
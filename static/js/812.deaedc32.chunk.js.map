{"version":3,"file":"static/js/812.deaedc32.chunk.js","mappings":"sSAAMA,EAAW,+BACXC,EAAM,4CAAZ,SAEeC,EAAS,GAATA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAwBC,GAAxB,uFACsBC,MAAMD,GAD5B,cACUE,EADV,yBAEaA,EAAIC,GAAMD,EAAIE,OAASC,QAAQC,OAAO,IAAIC,MAAM,eAF7D,kEAKO,SAASC,IACb,OAAOT,EAAS,GAAD,OAAIF,EAAJ,8BAAkCC,IAG7C,SAASW,EAAWC,GACxB,OAAOX,EAAS,GAAD,OAAIF,EAAJ,wBAA4BC,EAA5B,yBAAgDY,IAG3D,SAASC,EAAkBC,GAC/B,OAAOb,EAAS,GAAD,OAAIF,EAAJ,kBAAsBe,GAAtB,OAAgCd,IAG3C,SAASe,EAAgBD,GAC7B,OAAOb,EAAS,GAAD,OAAIF,EAAJ,kBAAsBe,EAAtB,mBAAwCd,IAGnD,SAASgB,EAAkBF,GAC/B,OAAOb,EAAS,GAAD,OAAIF,EAAJ,kBAAsBe,EAAtB,mBAAwCd,M,kHCrB3C,SAASiB,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQN,GAAYO,EAAAA,EAAAA,MAAZP,QAMR,OALAQ,EAAAA,EAAAA,YAAU,WACRrB,EAAAA,GACqBa,GAClBS,MAAK,SAAAC,GAAS,OAAIJ,EAAWI,EAAUC,cACzC,CAACX,KAEF,wBACsB,IAAnBK,EAAQO,OACPP,EAAQQ,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GAC9B,OACE,2BACE,qCAAaF,MACb,uBAAIC,MAFGC,OAOb","sources":["api/fetch.js","components/Reviews/Reviews.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '?api_key=5c9ace2476c46656758ceca732bea2c0';\n\nasync function fetchApi(url) {\n    const res = await fetch(url);\n      return res.ok ?  res.json() : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrendFilms() {\n   return fetchApi(`${BASE_URL}/trending/movie/day${KEY}`)\n}\n\nexport function fetchMovie(movieName) {\n   return fetchApi(`${BASE_URL}/search/movie${KEY}&page=1&query=${movieName}`)\n}\n\nexport function fetchMovieDetails(movieId) {\n   return fetchApi(`${BASE_URL}/movie/${movieId}${KEY}`)\n}\n\nexport function fetchMovieCasts(movieId) {\n   return fetchApi(`${BASE_URL}/movie/${movieId}/credits${KEY}`)\n}\n\nexport function fetchMovieReviews(movieId) {\n   return fetchApi(`${BASE_URL}/movie/${movieId}/reviews${KEY}`)\n}","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as fetchApi from '../../api/fetch';\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  useEffect(() => {\n    fetchApi\n      .fetchMovieReviews(movieId)\n      .then(filmCasts => setReviews(filmCasts.results));\n  }, [movieId]);\n  return (\n    <ul>\n      {reviews.length !== 0 ? (\n        reviews.map(({ author, content, id }) => {\n          return (\n            <li key={id}>\n              <h3>Author: {author}</h3>\n              <p>{content}</p>\n            </li>\n          );\n        })\n      ) : (\n        <p>No reviews</p>\n      )}\n    </ul>\n  );\n}\n"],"names":["BASE_URL","KEY","fetchApi","url","fetch","res","ok","json","Promise","reject","Error","fetchTrendFilms","fetchMovie","movieName","fetchMovieDetails","movieId","fetchMovieCasts","fetchMovieReviews","Reviews","useState","reviews","setReviews","useParams","useEffect","then","filmCasts","results","length","map","author","content","id"],"sourceRoot":""}
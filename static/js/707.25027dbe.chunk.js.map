{"version":3,"file":"static/js/707.25027dbe.chunk.js","mappings":"sSAAMA,EAAW,+BACXC,EAAM,4CAAZ,SAEeC,EAAS,GAATA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAwBC,GAAxB,uFACsBC,MAAMD,GAD5B,cACUE,EADV,yBAEaA,EAAIC,GAAMD,EAAIE,OAASC,QAAQC,OAAO,IAAIC,MAAM,eAF7D,kEAKO,SAASC,IACb,OAAOT,EAAS,GAAD,OAAIF,EAAJ,8BAAkCC,IAG7C,SAASW,EAAWC,GACxB,OAAOX,EAAS,GAAD,OAAIF,EAAJ,wBAA4BC,EAA5B,yBAAgDY,IAG3D,SAASC,EAAkBC,GAC/B,OAAOb,EAAS,GAAD,OAAIF,EAAJ,kBAAsBe,GAAtB,OAAgCd,IAG3C,SAASe,EAAgBD,GAC7B,OAAOb,EAAS,GAAD,OAAIF,EAAJ,kBAAsBe,EAAtB,mBAAwCd,IAGnD,SAASgB,EAAkBF,GAC/B,OAAOb,EAAS,GAAD,OAAIF,EAAJ,kBAAsBe,EAAtB,mBAAwCd,M,2HCrB3C,SAASiB,EAAT,GAA8B,EAANC,GAAO,IAAD,MAC3C,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQP,GAAYQ,EAAAA,EAAAA,MAAZR,QACFS,GAAWC,EAAAA,EAAAA,MACXC,EAAQ,oBAAGF,EAASG,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IACnCC,GAAWC,EAAAA,EAAAA,QAAOJ,GACxB,GAA0BN,EAAAA,EAAAA,UAAS,MAAnC,eAAOW,EAAP,KAAcC,EAAd,KACAC,QAAQC,IAAR,UAAYV,EAASG,aAArB,aAAY,EAAgBC,OAC5BO,EAAAA,EAAAA,YAAU,WACRjC,EAAAA,GACqBa,GAClBqB,MAAK,SAAAC,GAAW,OAAIf,EAASe,MAC7BC,OAAM,SAAAP,GAAK,OAAIC,EAASD,EAAMQ,cAChC,CAACxB,IACJ,IAAQyB,EAAgEnB,EAAhEmB,YAAaC,EAAmDpB,EAAnDoB,eAAgBC,EAAmCrB,EAAnCqB,SAAUC,EAAyBtB,EAAzBsB,OAAQC,EAAiBvB,EAAjBuB,aAEvD,OACE,2BACGb,IAAS,wBAAKA,EAAMQ,WACrB,SAAC,KAAD,CAAMM,GAAInB,EAAV,mBACA,2BACGc,IACC,gBAAKM,IAAG,yCAAoCN,GAAeO,IAAI,MAEjE,wBAAKN,KACL,2CAAmBG,MACnB,sCACA,uBAAIF,KACJ,mCACCC,GACCA,EAAOK,KAAI,YAAmB,IAAhB7B,EAAe,EAAfA,GAAI8B,EAAW,EAAXA,KAChB,OAAO,0BAAgBA,GAAL9B,UAGxB,4BACE,2BACE,yBACE,SAAC,KAAD,CAAM0B,GAAG,OAAOlB,MAAO,CAAEC,KAAMC,EAASqB,SAAxC,qBAIF,yBACE,SAAC,KAAD,CAAML,GAAG,UAAUlB,MAAO,CAAEC,KAAMC,EAASqB,SAA3C,2BAKJ,SAAC,KAAD","sources":["api/fetch.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '?api_key=5c9ace2476c46656758ceca732bea2c0';\n\nasync function fetchApi(url) {\n    const res = await fetch(url);\n      return res.ok ?  res.json() : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrendFilms() {\n   return fetchApi(`${BASE_URL}/trending/movie/day${KEY}`)\n}\n\nexport function fetchMovie(movieName) {\n   return fetchApi(`${BASE_URL}/search/movie${KEY}&page=1&query=${movieName}`)\n}\n\nexport function fetchMovieDetails(movieId) {\n   return fetchApi(`${BASE_URL}/movie/${movieId}${KEY}`)\n}\n\nexport function fetchMovieCasts(movieId) {\n   return fetchApi(`${BASE_URL}/movie/${movieId}/credits${KEY}`)\n}\n\nexport function fetchMovieReviews(movieId) {\n   return fetchApi(`${BASE_URL}/movie/${movieId}/reviews${KEY}`)\n}","import React, { useState, useEffect, useRef } from 'react';\nimport { Link, useParams, useLocation, Outlet } from 'react-router-dom';\nimport * as fetchApi from '../../api/fetch';\n\nexport default function MovieDetails({ id }) {\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backPage = location.state?.from ?? '/';\n  const backFrom = useRef(backPage);\n  const [error, setError] = useState(null);\n  console.log(location.state?.from);\n  useEffect(() => {\n    fetchApi\n      .fetchMovieDetails(movieId)\n      .then(movieDetail => setMovie(movieDetail))\n      .catch(error => setError(error.message));\n  }, [movieId]);\n  const { poster_path, original_title, overview, genres, vote_average } = movie;\n\n  return (\n    <div>\n      {error && <h2>{error.message}</h2>}\n      <Link to={backPage}>Back</Link>\n      <div>\n        {poster_path && (\n          <img src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt=\"\" />\n        )}\n        <h1>{original_title}</h1>\n        <p>Average Score: {vote_average}</p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n        <h2>Genres</h2>\n        {genres &&\n          genres.map(({ id, name }) => {\n            return <span key={id}>{name}</span>;\n          })}\n      </div>\n      <div>\n        <ul>\n          <li>\n            <Link to=\"cast\" state={{ from: backFrom.current }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from: backFrom.current }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <Outlet />\n      </div>\n    </div>\n  );\n}\n"],"names":["BASE_URL","KEY","fetchApi","url","fetch","res","ok","json","Promise","reject","Error","fetchTrendFilms","fetchMovie","movieName","fetchMovieDetails","movieId","fetchMovieCasts","fetchMovieReviews","MovieDetails","id","useState","movie","setMovie","useParams","location","useLocation","backPage","state","from","backFrom","useRef","error","setError","console","log","useEffect","then","movieDetail","catch","message","poster_path","original_title","overview","genres","vote_average","to","src","alt","map","name","current"],"sourceRoot":""}